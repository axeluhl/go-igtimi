/**
 * File: IgtimiTimeSync
 * Project: timesync
 *
 * Version 0.1.0
 *
 * Author Stephen Markham
 * Date 01/03/2019
 * Copyright 2019, Igtimi Ltd., all rights reserved.
 * Description
 *    Protocol definition for using non-standard methods of timesync using Igtimi's services.
 *    The service should *only* be used when UDP is not a viable option as it does not provide the same
 *    level of accuracy.
 *
 * TODO:
 *    Check that this can be compiled without the gRPC libraries. If not, remove the service and place in TimeSync repo
 *
 * Note: Versions < 1.0 are liable to breaking changes (including structure)
 *        and therefore implementations based of these should proceed with caution.
 *        After 1.0 all changes *should* be backwards compatible.
 */

syntax = "proto3";
option optimize_for = SPEED;

option java_multiple_files = true;
option java_package = "com.igtimi.timesync.proto";
option java_outer_classname = "TimeSyncProto";

package com.igtimi;

message SNTPRequest{

  oneof send_timestamp{
    double seconds_since_1900 = 1 [json_name = "secondsSince1900"];
    uint64 ms_since_1970 = 2 [json_name = "msSince1970"];
  }

}

message NTPResponse{
  uint32 leap_indicator = 1 [json_name = "leapIndicator"];
  uint32 version = 2 [json_name = "version"];
  uint32 mode = 3 [json_name = "mode"];
  uint32 stratum = 4 [json_name = "stratum"];
  uint32 poll_interval = 5 [json_name = "pollInterval"];
  int32 precision = 6 [json_name = "precision"];

  double root_delay = 7 [json_name = "rootDelay"];
  double root_dispersion = 8 [json_name = "rootDispersion"];

  double reference_timestamp = 9 [json_name = "referenceTimestamp"]; //in seconds since 1900
  double originate_timestamp = 10 [json_name = "originateTimestamp"]; //in seconds since 1900
  double receive_timestamp = 11 [json_name = "receiveTimestamp"]; //in seconds since 1900
  double transmit_timestamp = 12 [json_name = "transmitTimestamp"]; //in seconds since 1900

  // These fields are not part of the standard message
  uint64 reference_timestamp_ms_since_1970 = 13 [json_name = "referenceTimestampMs1970"]; //in ms since 1970
  uint64 originate_timestamp_ms_since_1970 = 14 [json_name = "originateTimestampMs1970"]; //in ms since 1970
  uint64 receive_timestamp_ms_since_1970 = 15 [json_name = "receiveTimestampMs1970"]; //in ms since 1970
  uint64 transmit_timestamp_ms_since_1970 = 16 [json_name = "transmitTimestampMs1970"]; //in ms since 1970
}

service SNTPTimeSync {
    rpc SyncTime (SNTPRequest) returns (NTPResponse) {}
}
